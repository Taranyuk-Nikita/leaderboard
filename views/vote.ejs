<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/new.css">
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&display=swap">
    <title>Таблица лидеров</title>
</head>

<body style="background-image: url('/img/1118.png');">
    <% if (votingResults) { %>
    <div class="vote_wrapper">
        <form name="vote_member" method="post" action="/voting">
        <select name="member">
            <option value="0" selected disabled="disabled">Выберете номер участника</option>
            <% for (let key in votingResults.tableinner) { %>
                <option value="<%= key %>"><%= key %></option>
            <% } %>
        </select>
        <input type="submit" value="Голосовать" class="vote_submit">
        </form>
    </div>
    <% } %>
</body>

<script>
    let member = 0
    document.querySelector('.vote_submit').addEventListener('click', (e) => {
        e.preventDefault()
        member = document.forms.vote_member.elements.member.value 
        if (member != 0) {
            send = {
                vote: member
            }
            sendRequest('POST', '/voting', send)
            document.querySelector('.vote_submit').setAttribute('disabled', 'disabled')
            document.querySelector('.vote_submit').value = "Обработка..."
            setTimeout(() => {
                location.reload()
            }, 2000)
        } else {
            alert("Вы не выбрали участника!")
        }
    })
     // Запросы и ответы
     let xhr = new XMLHttpRequest()
        // отправка данных
        function sendRequest(method, requestURL, body = null) {
            return new Promise((resolve, reject) => {
                xhr.open(method, requestURL)
                xhr.responseType = "json"
                xhr.setRequestHeader('Content-Type', 'application/json')
                xhr.onload = () => {
                    if (xhr.status >= 400) reject(xhr.response);
                    else resolve(xhr.response);
                }
                xhr.onerror = () => {
                    reject(xhr.response);
                }
                if (body != null) body = JSON.stringify(body)
                xhr.send(body)
            })
        }
</script>

</html>